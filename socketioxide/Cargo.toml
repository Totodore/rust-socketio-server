[package]
name = "socketioxide"
description = "Socket IO server implementation in rust as a Tower Service."
version.workspace = true
edition.workspace = true
rust-version.workspace = true
authors.workspace = true
repository.workspace = true
homepage.workspace = true
keywords.workspace = true
categories.workspace = true
license.workspace = true
readme = "../README.md"


[dependencies]
bytes.workspace = true
engineioxide = { path = "../engineioxide", version = "0.14.1" }
futures-core.workspace = true
futures-util.workspace = true
tokio = { workspace = true, features = ["rt", "time"] }
serde.workspace = true
serde_json.workspace = true
tower.workspace = true
http.workspace = true
http-body.workspace = true
thiserror.workspace = true
itoa.workspace = true
hyper.workspace = true
matchit.workspace = true
pin-project-lite.workspace = true

# Tracing
tracing = { workspace = true, optional = true }

# State
state = { version = "0.6.0", optional = true }

[features]
v4 = ["engineioxide/v3"]
tracing = ["dep:tracing", "engineioxide/tracing"]
extensions = []
state = ["dep:state"]

[dev-dependencies]
engineioxide = { path = "../engineioxide", features = ["v3", "tracing"] }
tokio-tungstenite.workspace = true
axum.workspace = true
tokio = { workspace = true, features = [
    "macros",
    "parking_lot",
    "rt-multi-thread",
] }
tracing-subscriber.workspace = true
criterion.workspace = true
hyper = { workspace = true, features = ["server", "http1"] }
hyper-util = { workspace = true, features = ["tokio", "client-legacy"] }
http-body-util.workspace = true
rand = { version = "0.8", default-features = false }
# docs.rs-specific configuration
[package.metadata.docs.rs]
features = ["v4", "extensions", "tracing", "state"]
# Special configuration for docs.rs build
rustdoc-args = ["--cfg", "docsrs"]

[[bench]]
name = "packet_encode"
path = "benches/packet_encode.rs"
harness = false

[[bench]]
name = "packet_decode"
path = "benches/packet_decode.rs"
harness = false

[[bench]]
name = "extensions"
path = "benches/extensions.rs"
harness = false
